# Sets up an IAM role that mimics NGAP so we can test during local development to see what fails and
# what doesn't
Description: GIBS/Cumulus - Deployer IAM Role
Parameters:
  Prefix:
    Type: String
    Description: The prefix used for resources in the application
  StateMachinePrefix:
    Type: String
    Description: The prefix used for state machines
  InternalBucketName:
    Type: String
    Default: "cumulus-internal"
Resources:
  DeployerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub ${AWS::AccountId}
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: DeployerRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
              - cloudformation:*
              Resource:
              - "*"

            - Effect: Allow
              Action:
              - ec2:CreateSecurityGroup
              - ec2:Describe*
              - ec2:DeleteSecurityGroup
              - ec2:RevokeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:createTags
              Resource:
              - "*"

            - Effect: Allow
              Action:
              - s3:*
              Resource:
              - !Sub arn:aws:s3:::${InternalBucketName}
              - !Sub arn:aws:s3:::${InternalBucketName}/*
              - !Sub arn:aws:s3:::${Prefix}*
              - !Sub arn:aws:s3:::${Prefix}*/*

            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:DeleteLogGroup
              Resource:
                - !Sub arn:aws:logs:*:*:${Prefix}*

            - Effect: Allow
              Action:
                - logs:DescribeLogGroups
              Resource:
                - "*"

            - Effect: Allow
              Action:
              - ecs:CreateCluster
              - ecs:DeleteCluster
              - ecs:RegisterTaskDefinition
              - ecs:DeregisterTaskDefinition
              - ecs:CreateService
              - ecs:DeleteService
              - ecs:Describe*
              - ecs:Update*
              - ecs:List*
              - ecs:Stop*
              Resource:
              - "*"

            - Effect: Allow
              Action:
              - dynamodb:DescribeTable
              - dynamodb:CreateTable
              - dynamodb:DeleteTable
              Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Prefix}*

            - Effect: Allow
              Action:
              - iam:GetRole
              - iam:PassRole
              Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${Prefix}*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${Prefix}*

            - Effect: Allow
              Action:
              - iam:CreateInstanceProfile
              - iam:PassRole
              - iam:DeleteInstanceProfile
              - iam:AddRoleToInstanceProfile
              - iam:RemoveRoleFromInstanceProfile
              Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/${Prefix}*

            - Effect: Allow
              Action:
              - lambda:GetFunction
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:GetFunctionConfiguration
              - lambda:Update*
              - lambda:AddPermission
              - lambda:InvokeFunction
              - lambda:ListTags
              - lambda:TagResource
              - lambda:UntagResource
              - lambda:CreateEventSourceMapping
              Resource:
              - "*"

            - Effect: Allow
              Action:
              - events:PutRule
              - events:DescribeRule
              - events:DeleteRule
              - events:RemoveTargets
              - events:PutTargets
              - events:ListTargetsByRule
              Resource:
              - "*"

            - Effect: Allow
              Action:
              - autoscaling:CreateLaunchConfiguration
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:DeleteLaunchConfiguration
              - autoscaling:DeleteAutoScalingGroup
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:SetDesiredCapacity
              - autoscaling:Describe*
              Resource:
              - "*"

            - Effect: Allow
              Action:
                - states:CreateActivity
                - states:CreateStateMachine
                - states:DeleteStateMachine
              Resource:
                "*"

            - Effect: Allow
              Action:
                - states:DeleteActivity
              Resource:
                - !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:activity:${Prefix}*"

            - Effect: Allow
              Action:
                - states:DeleteStateMachine
              Resource:
                - !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${StateMachinePrefix}*"

            - Effect: Allow
              Action:
                - sqs:CreateQueue
                - sqs:DeleteQueue
                - sqs:SetQueueAttributes
                - sqs:GetQueueAttributes
              Resource:
                - !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${Prefix}*'

            - Effect: Allow
              Action:
               - lambda:RemovePermission
              Resource:
               - "*"

            - Effect: Allow
              Action:
                - SNS:ListTopics
              Resource:
                - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*"

            - Effect: Allow
              Action:
                - SNS:*
              Resource:
                - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${Prefix}*"

            # Allow creation / management of own elasticsearch cluster
            - Effect: Allow
              Action:
                - es:*
              Resource:
                - !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${Prefix}*"

            - Effect: Allow
              Action:
                - es:AddTags
              Resource:
                - !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*"

            # Allow API Gateway management. REST APIs do not use normal prefixes
            - Effect: Allow
              Action:
                - apigateway:*
              Resource:
                - "*"

Outputs:
  DeployerRoleArn:
    Description: The ARN of the Deployer
    Value: !GetAtt DeployerRole.Arn
